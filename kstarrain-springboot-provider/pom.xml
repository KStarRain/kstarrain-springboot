<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.kstarrain.framework</groupId>
        <artifactId>kstarrain-framework-parent</artifactId>
        <version>1.0.0</version>
    </parent>

    <groupId>com.kstarrain</groupId>
    <artifactId>kstarrain-springboot-provider</artifactId>
    <version>1.0.0</version>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>


    <dependencies>

        <!-- model api -->
        <dependency>
            <groupId>com.kstarrain</groupId>
            <artifactId>kstarrain-springboot-api</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- framework web -->
        <dependency>
            <groupId>com.kstarrain.framework</groupId>
            <artifactId>kstarrain-framework-web</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!-- knife4j swagger ui  官方地址：https://doc.xiaominfo.com/ -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>2.0.2</version>
        </dependency>


        <!-- framework elastic job -->
        <dependency>
            <groupId>com.kstarrain.framework</groupId>
            <artifactId>kstarrain-framework-elastic-job</artifactId>
            <version>1.0.0</version>
        </dependency>

        <!--  test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- mysql JDBC 驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- druid 连接池  源码： https://github.com/alibaba/druid/tree/master/druid-spring-boot-starter -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.6</version>
        </dependency>

        <!-- pageHelper (内含 mybatis-spring-boot-starter) -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.2.10</version>
        </dependency>

        <!-- redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

    </dependencies>

    <build>
        <!-- 打包时生成的名字 -->
        <finalName>kstarrain-springboot-provider</finalName>


        <!-- 参考文档 https://www.cnblogs.com/dreamroute/p/6729147.html-->
        <!-- 构建Maven项目的时候，如果没有进行特殊的配置，Maven会按照标准的目录结构查找和处理各种类型文件
             maven 在 compile 时 它默认的会把src/main/java目录下的所有*java文件编译后放到了target/classes目录中，除了*java的任何文件都会被忽略,包括*xml文件
                                     还会把src/main/resources目录中的文件复制到target/classes目录中。
             有时候有些配置文件通常与.java文件一起放在src/main/java目录下（如mybatis表映射xml文件）。这些情况下就需要在pom.xml文件中添加<resources>。 -->
        <resources>
            <!-- resources参考文档 https://blog.csdn.net/newbie_907486852/article/details/81205532
                                  https://blog.csdn.net/zht741322694/article/details/78676662-->
            <resource>
                <!-- 指定resources插件处理哪个目录下的资源文件 -->
                <directory>src/main/java</directory>
                <!-- filtering为false的时候，会把不需要过滤的文件（<includes>）打到classpath下
                     filtering为true的时候，这时只会把过滤的文件（<excludes>）打到classpath下-->
                <filtering>false</filtering>
                <!-- 只 包含directory指定目录下的以下文件,<include>和<exclude>都存在的话，那就发生冲突了，这时会以<exclude>为准-->
                <includes>
                    <include>**/*Mapper.xml</include>
                </includes>
            </resource>

            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
            </resource>
        </resources>
    </build>

</project>